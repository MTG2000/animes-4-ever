{"version":3,"sources":["Views/Shared/Header.jsx","Views/Shared/Footer.jsx","Views/Shared/ImageFixedAspect.js","Views/Anime/index.js","Views/Author/index.js","Views/Studio/index.js","Views/SearchResult/index.js","utils/AppRouter.jsx","App.js","utils/ScrollToTopController.js","utils/MaterialTheme.jsx","utils/AppWrapper.js","index.js","Views/Shared/LoadingPage.jsx","Api/index.js","Views/Shared/Image.jsx","Views/Home/components/AnimeCard.jsx"],"names":["useStyle","makeStyles","root","props","background","width","padding","input","color","Header","useState","search","setSearch","theme","useTheme","classes","history","useHistory","className","Grid","container","justify","alignItems","to","Typography","variant","component","item","onSubmit","e","preventDefault","push","htmlColor","TextField","label","value","onChange","target","InputProps","InputLabelProps","position","bottom","left","Footer","Container","href","rel","useStyles","imgWrapper","StyleImgWrapper","hoverColor","pointerOnHover","height","maxWidth","maxHeight","margin","paddingTop","cursor","overflow","content","display","top","opacity","transition","img","StyleImg","objectFit","objectPosition","ImageFixedAspect","src","alt","AnimePage","animeId","match","params","id","useQuery","QueriesApi","animePage","variables","loading","data","LoadingPage","anime","Box","py","xs","sm","title","author","style","textDecoration","name","studio","rating","lineHeight","description","image","AuthorPage","authorId","authorPage","animes","map","a","AnimeCard","key","StudioPage","studioId","studioPage","SearchResult","searchValue","searchAnime","Home","React","lazy","AppRouter","Suspense","fallback","fullPage","path","App","ScrollToTop","prevProps","this","location","window","scrollTo","children","Component","withRouter","createMuiTheme","typography","fontFamily","join","palette","text","primary","main","secondary","MaterialTheme","ThemeProvider","client","ApolloClient","uri","AppWrapper","ReactDOM","render","document","getElementById","message","align","mainPage","gql","Image","transform","whiteSpace","textOverflow"],"mappings":"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","file":"static/js/main.bf9f696c.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport {\r\n  makeStyles,\r\n  useTheme,\r\n  Typography,\r\n  TextField,\r\n  Grid,\r\n} from \"@material-ui/core\";\r\nimport Search from \"@material-ui/icons/Search\";\r\nimport { useHistory, Link } from \"react-router-dom\";\r\n\r\nconst useStyle = makeStyles({\r\n  root: (props) => ({\r\n    background: \"#000\",\r\n    width: \"100%\",\r\n    padding: \"15px 25px\",\r\n  }),\r\n  input: {\r\n    color: \"white !important\",\r\n  },\r\n});\r\n\r\nconst Header = () => {\r\n  const [search, setSearch] = useState(\"\");\r\n\r\n  const theme = useTheme();\r\n  const classes = useStyle(theme);\r\n  const history = useHistory();\r\n\r\n  const handleSearch = (e) => {\r\n    e.preventDefault();\r\n    history.push(`/search/${search}`);\r\n    setSearch(\"\");\r\n  };\r\n\r\n  return (\r\n    <header className={classes.root}>\r\n      <Grid container justify=\"space-between\" alignItems=\"center\">\r\n        <Link to=\"/\">\r\n          <Typography color=\"textPrimary\" variant=\"h4\" component=\"h1\">\r\n            Animes\r\n            <Typography color=\"primary\" component=\"span\" variant=\"h4\">\r\n              4\r\n            </Typography>\r\n            Ever\r\n          </Typography>\r\n        </Link>\r\n        <Grid item>\r\n          <form onSubmit={handleSearch}>\r\n            <Grid container alignItems=\"flex-end\">\r\n              <Grid item>\r\n                <Search htmlColor=\"#FFF\" className=\"mx-2\" />\r\n              </Grid>\r\n              <Grid item>\r\n                <TextField\r\n                  label=\"Search For Anime\"\r\n                  className={classes.input}\r\n                  color=\"primary\"\r\n                  value={search}\r\n                  onChange={(e) => setSearch(e.target.value)}\r\n                  InputProps={{\r\n                    className: classes.input,\r\n                  }}\r\n                  InputLabelProps={{\r\n                    className: classes.input,\r\n                  }}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          </form>\r\n        </Grid>\r\n      </Grid>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport { makeStyles, Typography, Container } from \"@material-ui/core\";\r\n\r\nconst useStyle = makeStyles({\r\n  root: () => ({\r\n    background: \"#000\",\r\n    width: \"100%\",\r\n    padding: \"5px 25px\",\r\n    position: \"absolute\",\r\n    bottom: 0,\r\n    left: 0,\r\n  }),\r\n  input: {\r\n    color: \"white !important\",\r\n  },\r\n});\r\n\r\nconst Footer = () => {\r\n  const classes = useStyle();\r\n\r\n  return (\r\n    <footer className={classes.root}>\r\n      <Container>\r\n        <Typography variant=\"subtitle1\" color=\"textPrimary\">\r\n          Made By &nbsp;\r\n          <a\r\n            href=\"https://mtgdev.herokuapp.com\"\r\n            target=\"_blank\"\r\n            rel=\"noopener noreferrer\"\r\n          >\r\n            <Typography variant=\"h6\" component=\"span\" color=\"primary\">\r\n              Mtg\r\n            </Typography>\r\n          </a>\r\n        </Typography>\r\n      </Container>\r\n    </footer>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles({\r\n  imgWrapper: ({ StyleImgWrapper, hoverColor, pointerOnHover }) => ({\r\n    width: \"100%\",\r\n    height: \"auto\",\r\n    maxWidth: \"none\",\r\n    maxHeight: \"none\",\r\n    background: \"#f1f1f1\",\r\n    margin: \"0\",\r\n    position: \"relative\",\r\n    paddingTop: \"140%\" /* 1:1.41 Aspect Ratio */,\r\n    cursor: pointerOnHover ? \"pointer\" : \"default\",\r\n    overflow: \"hidden\",\r\n    \"&::after\": {\r\n      content: '\"\"',\r\n      display: \"block\",\r\n      position: \"absolute\",\r\n      width: \"100%\",\r\n      height: \"100%\",\r\n      top: 0,\r\n      left: 0,\r\n      background: hoverColor,\r\n      opacity: 0,\r\n      transition: \"opacity .4s ease-in-out\",\r\n    },\r\n    \"&:hover\": {\r\n      \"&::after\": {\r\n        opacity: 0.4,\r\n      },\r\n    },\r\n    ...StyleImgWrapper,\r\n  }),\r\n  img: ({ StyleImg }) => ({\r\n    position: \"absolute\",\r\n    left: 0,\r\n    top: 0,\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    objectFit: \"cover\",\r\n    objectPosition: \"center top\",\r\n    ...StyleImg,\r\n  }),\r\n});\r\n\r\n//Example For A Use\r\n\r\n/*\r\n  <ImageFixedAspect\r\n                src={image}\r\n                StyleImgWrapper={{ width: 350, height: 196, padding: 4 }}\r\n                hoverColor=\"rgba(0, 0, 0, 0.777)\"\r\n                pointerOnHover\r\n              />\r\n */\r\n\r\nconst ImageFixedAspect = ({\r\n  src,\r\n  alt = \"\",\r\n  StyleImgWrapper = {},\r\n  StyleImg = {},\r\n  hoverColor = \"transparent\",\r\n  pointerOnHover = false,\r\n}) => {\r\n  const classes = useStyles({\r\n    StyleImgWrapper,\r\n    StyleImg,\r\n    hoverColor,\r\n    pointerOnHover,\r\n  });\r\n\r\n  return (\r\n    <div className={classes.imgWrapper}>\r\n      <img src={src} alt={alt} className={classes.img} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ImageFixedAspect;\r\n","import React from \"react\";\r\nimport { Container, Grid, Box, Typography } from \"@material-ui/core\";\r\nimport Image from \"../Shared/ImageFixedAspect\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport QueriesApi from \"../../Api\";\r\nimport LoadingPage from \"../Shared/LoadingPage\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Star from \"@material-ui/icons/Star\";\r\n\r\nconst AnimePage = (props) => {\r\n  const animeId = props.match.params.id;\r\n\r\n  const { loading, data } = useQuery(QueriesApi.animePage, {\r\n    variables: { id: +animeId },\r\n  });\r\n\r\n  if (loading) return <LoadingPage />;\r\n\r\n  const { anime } = data;\r\n\r\n  return (\r\n    <Box py={6}>\r\n      <Container>\r\n        <Grid container>\r\n          <Grid item className=\"px-5\" xs={12} sm={8}>\r\n            <Typography variant=\"h3\" component=\"h1\" color=\"primary\">\r\n              {anime.title}\r\n            </Typography>\r\n            <Typography variant=\"body1\" component=\"h6\" color=\"textPrimary\">\r\n              Author:{\" \"}\r\n              <Link to={`/author/${anime.author.id}`}>\r\n                <Typography\r\n                  variant=\"h6\"\r\n                  component=\"span\"\r\n                  style={{ textDecoration: \"underline\" }}\r\n                  color=\"textPrimary\"\r\n                >\r\n                  {anime.author.name}\r\n                </Typography>\r\n              </Link>\r\n            </Typography>\r\n            <Typography variant=\"body1\" component=\"h6\" color=\"textPrimary\">\r\n              Studio:{\" \"}\r\n              <Link to={`/studio/${anime.studio.id}`}>\r\n                <Typography\r\n                  variant=\"h6\"\r\n                  component=\"span\"\r\n                  style={{ textDecoration: \"underline\" }}\r\n                  color=\"textPrimary\"\r\n                >\r\n                  {anime.studio.name}\r\n                </Typography>\r\n              </Link>\r\n            </Typography>\r\n            {anime.rating && (\r\n              <Typography variant=\"h6\" color=\"textPrimary\">\r\n                {anime.rating} <Star htmlColor=\"#ffeb3b\" />\r\n              </Typography>\r\n            )}\r\n            <Typography\r\n              variant=\"body1\"\r\n              color=\"textPrimary\"\r\n              className=\"mt-5\"\r\n              style={{ lineHeight: \"2em\" }}\r\n            >\r\n              {anime.description}\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item xs={12} sm={4}>\r\n            <Image src={anime.image} />\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default AnimePage;\r\n","import React from \"react\";\r\nimport { Box, Container, Typography, Grid } from \"@material-ui/core\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport QueriesApi from \"../../Api\";\r\nimport LoadingPage from \"../Shared/LoadingPage\";\r\nimport AnimeCard from \"../Home/components/AnimeCard\";\r\n\r\nconst AuthorPage = (props) => {\r\n  const authorId = props.match.params.id;\r\n\r\n  const { loading, data } = useQuery(QueriesApi.authorPage, {\r\n    variables: { id: +authorId },\r\n  });\r\n\r\n  if (loading) return <LoadingPage />;\r\n\r\n  const { author } = data;\r\n\r\n  return (\r\n    <Box py={6}>\r\n      <Container>\r\n        <Typography color=\"textPrimary\">Author Name: </Typography>\r\n        <Typography color=\"textPrimary\" variant=\"h3\">\r\n          {author.name}\r\n        </Typography>\r\n        <Typography variant=\"h4\" className=\"mb-3 mt-5\" color=\"textPrimary\">\r\n          Author's Works:\r\n        </Typography>\r\n        <Grid container justify=\"center\">\r\n          {author.animes.map((a) => (\r\n            <AnimeCard key={a.id} anime={a} />\r\n          ))}\r\n        </Grid>\r\n      </Container>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default AuthorPage;\r\n","import React from \"react\";\r\nimport { Box, Container, Typography, Grid } from \"@material-ui/core\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport QueriesApi from \"../../Api\";\r\nimport LoadingPage from \"../Shared/LoadingPage\";\r\nimport AnimeCard from \"../Home/components/AnimeCard\";\r\nconst StudioPage = (props) => {\r\n  const studioId = props.match.params.id;\r\n\r\n  const { loading, data } = useQuery(QueriesApi.studioPage, {\r\n    variables: { id: +studioId },\r\n  });\r\n\r\n  if (loading) return <LoadingPage />;\r\n\r\n  const { studio } = data;\r\n\r\n  return (\r\n    <Box py={6}>\r\n      <Container>\r\n        <Typography color=\"textPrimary\">Studio Name: </Typography>\r\n        <Typography color=\"textPrimary\" variant=\"h3\">\r\n          {studio.name}\r\n        </Typography>\r\n        <Typography variant=\"h4\" className=\"mb-3 mt-5\" color=\"textPrimary\">\r\n          Studio's Works:\r\n        </Typography>\r\n        <Grid container justify=\"center\">\r\n          {studio.animes.map((a) => (\r\n            <AnimeCard key={a.id} anime={a} />\r\n          ))}\r\n        </Grid>\r\n      </Container>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default StudioPage;\r\n","import React from \"react\";\r\nimport { Box, Container, Typography, Grid } from \"@material-ui/core\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport QueriesApi from \"../../Api\";\r\nimport LoadingPage from \"../Shared/LoadingPage\";\r\nimport AnimeCard from \"../Home/components/AnimeCard\";\r\n\r\nconst SearchResult = (props) => {\r\n  const searchValue = props.match.params.value;\r\n\r\n  const { loading, data } = useQuery(QueriesApi.searchAnime, {\r\n    variables: { name: searchValue },\r\n  });\r\n\r\n  if (loading) return <LoadingPage />;\r\n\r\n  return (\r\n    <Box py={6}>\r\n      <Container>\r\n        <Typography color=\"textPrimary\" variant=\"h6\">\r\n          search results for: '{searchValue}'\r\n        </Typography>\r\n\r\n        <Grid container justify=\"center\">\r\n          {data.animes.map((a) => (\r\n            <AnimeCard key={a.id} anime={a} />\r\n          ))}\r\n        </Grid>\r\n      </Container>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default SearchResult;\r\n","import React from \"react\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport LoadingPage from \"../Views/Shared/LoadingPage\";\r\nimport AnimePage from \"../Views/Anime\";\r\nimport AuthorPage from \"../Views/Author\";\r\nimport StudioPage from \"../Views/Studio\";\r\nimport SearchResult from \"../Views/SearchResult\";\r\n\r\nconst Home = React.lazy(() => import(\"../Views/Home\"));\r\n\r\nconst AppRouter = () => {\r\n  return (\r\n    <React.Suspense fallback={<LoadingPage fullPage={true} />}>\r\n      <Switch>\r\n        <Route path=\"/search/:value\" component={SearchResult} />\r\n        <Route path=\"/anime/:id\" component={AnimePage} />\r\n        <Route path=\"/author/:id\" component={AuthorPage} />\r\n        <Route path=\"/studio/:id\" component={StudioPage} />\r\n        <Route path=\"/\" component={Home} />\r\n      </Switch>\r\n    </React.Suspense>\r\n  );\r\n};\r\n\r\nexport default AppRouter;\r\n","import React from \"react\";\nimport Header from \"./Views/Shared/Header\";\nimport Footer from \"./Views/Shared/Footer\";\nimport AppRouter from \"./utils/AppRouter\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header />\n      <AppRouter />\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","import { Component } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nclass ScrollToTop extends Component {\r\n  componentDidUpdate(prevProps) {\r\n    if (this.props.location !== prevProps.location) {\r\n      window.scrollTo(0, 0);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return this.props.children;\r\n  }\r\n}\r\n\r\nexport default withRouter(ScrollToTop);\r\n","import React from \"react\";\r\n\r\nimport { createMuiTheme, ThemeProvider } from \"@material-ui/core/styles\";\r\n\r\nconst theme = createMuiTheme({\r\n  typography: {\r\n    fontFamily: [\r\n      \"Ubuntu\",\r\n      \"BlinkMacSystemFont\",\r\n      '\"Segoe UI\"',\r\n      \"Roboto\",\r\n      '\"Helvetica Neue\"',\r\n      \"Arial\",\r\n      \"sans-serif\",\r\n      '\"Apple Color Emoji\"',\r\n      '\"Segoe UI Emoji\"',\r\n      '\"Segoe UI Symbol\"',\r\n    ].join(\",\"),\r\n  },\r\n  palette: {\r\n    text: {\r\n      primary: \"#fff\",\r\n    },\r\n\r\n    primary: {\r\n      // light: will be calculated from palette.primary.main,\r\n      main: \"#f44336\",\r\n      // dark: will be calculated from palette.primary.main,\r\n      // contrastText: will be calculated to contrast with palette.primary.main\r\n    },\r\n    secondary: {\r\n      main: \"#1de9b6\",\r\n      // dark: will be calculated from palette.secondary.main,\r\n    },\r\n\r\n    // error: will use the default color\r\n  },\r\n});\r\n\r\nconst MaterialTheme = (props) => {\r\n  return <ThemeProvider theme={theme}>{props.children}</ThemeProvider>;\r\n};\r\n\r\nexport default MaterialTheme;\r\n","import React from \"react\";\r\nimport \"./bootstrap.min.css\";\r\nimport \"./App.scss\";\r\n\r\nimport ScrollToTop from \"./ScrollToTopController\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\n// import \"./aos\";\r\nimport MaterialTheme from \"./MaterialTheme\";\r\nimport { default as ApolloClient } from \"apollo-boost\";\r\nimport { ApolloProvider } from \"@apollo/react-hooks\";\r\n\r\nconst client = new ApolloClient({\r\n  uri: \"/graphql\", //This is the default by the way\r\n});\r\n\r\nconst AppWrapper = (props) => {\r\n  return (\r\n    <BrowserRouter>\r\n      <MaterialTheme>\r\n        <ScrollToTop>\r\n          <ApolloProvider client={client}>{props.children}</ApolloProvider>\r\n        </ScrollToTop>\r\n      </MaterialTheme>\r\n    </BrowserRouter>\r\n  );\r\n};\r\n\r\nexport default AppWrapper;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./utils/vendors\";\nimport AppWrapper from \"./utils/AppWrapper\";\n\nReactDOM.render(\n  <AppWrapper>\n    <App />\n  </AppWrapper>,\n  document.getElementById(\"root\")\n);\n","import React from \"react\";\r\nimport { Box, Typography } from \"@material-ui/core\";\r\n\r\nconst LoadingPage = ({ message = \"Loading\" }) => {\r\n  return (\r\n    <Box py={6}>\r\n      <Typography variant=\"h3\" align=\"center\" color=\"textPrimary\">\r\n        {message}\r\n      </Typography>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default LoadingPage;\r\n","import { gql } from \"apollo-boost\";\r\n\r\nconst mainPage = gql`\r\n  {\r\n    topAiringAnimes(limit: 4) {\r\n      id\r\n      title\r\n      image\r\n      rating\r\n      author {\r\n        name\r\n      }\r\n    }\r\n\r\n    upcomingAnimes(limit: 4) {\r\n      id\r\n      title\r\n      image\r\n    }\r\n\r\n    topAnimes(limit: 4) {\r\n      id\r\n      title\r\n      image\r\n      rating\r\n    }\r\n  }\r\n`;\r\n\r\nconst animePage = gql`\r\n  query getAnime($id: Int!) {\r\n    anime(id: $id) {\r\n      title\r\n      image\r\n      rating\r\n      description\r\n      author {\r\n        id\r\n        name\r\n      }\r\n      studio {\r\n        id\r\n        name\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst authorPage = gql`\r\n  query getAuthor($id: Int!) {\r\n    author(id: $id) {\r\n      name\r\n      animes {\r\n        id\r\n        title\r\n        image\r\n        rating\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst studioPage = gql`\r\n  query getStudio($id: Int!) {\r\n    studio(id: $id) {\r\n      name\r\n      animes {\r\n        id\r\n        title\r\n        image\r\n        rating\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst searchAnime = gql`\r\n  query search($name: String!) {\r\n    animes: searchAnimes(name: $name) {\r\n      id\r\n      title\r\n      image\r\n      rating\r\n    }\r\n  }\r\n`;\r\n\r\nexport default {\r\n  mainPage,\r\n  animePage,\r\n  authorPage,\r\n  studioPage,\r\n  searchAnime,\r\n};\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles({\r\n  imgWrapper: ({ StyleImgWrapper, hoverColor, pointerOnHover }) => ({\r\n    padding: 0,\r\n    background: \"#f1f1f1\",\r\n    margin: \"0\",\r\n    position: \"relative\",\r\n    cursor: pointerOnHover ? \"pointer\" : \"default\",\r\n    \"&::after\": {\r\n      content: '\"\"',\r\n      display: \"block\",\r\n      position: \"absolute\",\r\n      width: \"100%\",\r\n      height: \"100%\",\r\n      top: 0,\r\n      left: 0,\r\n      background: hoverColor,\r\n      opacity: 0,\r\n      transition: \"opacity .4s ease-in-out\",\r\n    },\r\n    \"&:hover\": {\r\n      \"&::after\": {\r\n        opacity: 0.4,\r\n      },\r\n    },\r\n    ...StyleImgWrapper,\r\n  }),\r\n  img: ({ StyleImg }) => ({\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    objectFit: \"cover\",\r\n    objectPosition: \"center top\",\r\n    ...StyleImg,\r\n  }),\r\n});\r\n\r\n//Example For A Use\r\n\r\n/*\r\n  <Image\r\n                src={image}\r\n                StyleImgWrapper={{ width: 350, height: 196, padding: 4 }}\r\n                hoverColor=\"rgba(0, 0, 0, 0.777)\"\r\n                pointerOnHover\r\n              />\r\n */\r\n\r\nconst Image = ({\r\n  src,\r\n  alt = \"\",\r\n  StyleImgWrapper = {\r\n    width: \"100%\",\r\n    height: \"auto\",\r\n    maxWidth: \"none\",\r\n    maxHeight: \"none\",\r\n  },\r\n  StyleImg = {},\r\n  hoverColor = \"transparent\",\r\n  pointerOnHover = false,\r\n}) => {\r\n  const classes = useStyles({\r\n    StyleImgWrapper,\r\n    StyleImg,\r\n    hoverColor,\r\n    pointerOnHover,\r\n  });\r\n\r\n  return (\r\n    <div className={classes.imgWrapper}>\r\n      <img src={src} alt={alt} className={classes.img} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Image;\r\n","import React from \"react\";\r\nimport { makeStyles, Typography, Grid } from \"@material-ui/core\";\r\nimport Star from \"@material-ui/icons/Star\";\r\nimport Image from \"../../Shared/Image\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst useStyle = makeStyles({\r\n  root: {\r\n    width: 220,\r\n    height: 400,\r\n    margin: \"auto 20px\",\r\n    transition: \"transform .4s ease-in-out\",\r\n    \"&:hover\": {\r\n      transform: \"translate(-5px, -5px)\",\r\n    },\r\n  },\r\n});\r\n\r\nconst AnimeCard = ({ anime }) => {\r\n  const classes = useStyle();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Link to={`/anime/${anime.id}`}>\r\n        <Image\r\n          src={anime.image}\r\n          StyleImgWrapper={{ height: \"80%\" }}\r\n          pointerOnHover\r\n        />\r\n        <Typography\r\n          variant=\"h6\"\r\n          align=\"center\"\r\n          style={{\r\n            overflow: \"hidden\",\r\n            whiteSpace: \"nowrap\",\r\n            textOverflow: \"ellipsis\",\r\n          }}\r\n          color=\"primary\"\r\n        >\r\n          {anime.title}\r\n        </Typography>\r\n        {anime.rating && (\r\n          <Grid container justify=\"center\" alignItems=\"center\">\r\n            <Typography\r\n              variant=\"subtitle1\"\r\n              align=\"center\"\r\n              color=\"textPrimary\"\r\n              className=\"mx-2\"\r\n            >\r\n              {anime.rating}\r\n            </Typography>\r\n            <Star htmlColor=\"#ffeb3b\" />\r\n          </Grid>\r\n        )}\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AnimeCard;\r\n"],"sourceRoot":""}